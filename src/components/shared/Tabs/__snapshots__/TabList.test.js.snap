// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TabList /> should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TabList
    handleTabChange={[Function]}
    selectedTabIndex={1}
    tabs={
      Array [
        "Tab1",
        "Tab2",
        "Tab3",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <TabHandle
          isActive={false}
          onClick={[Function]}
        >
          Tab1
        </TabHandle>,
        <TabHandle
          isActive={true}
          onClick={[Function]}
        >
          Tab2
        </TabHandle>,
        <TabHandle
          isActive={false}
          onClick={[Function]}
        >
          Tab3
        </TabHandle>,
      ],
      "className": "list_2yirk3",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "tab-0",
        "nodeType": "function",
        "props": Object {
          "children": "Tab1",
          "isActive": false,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Tab1",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "tab-1",
        "nodeType": "function",
        "props": Object {
          "children": "Tab2",
          "isActive": true,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Tab2",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "tab-2",
        "nodeType": "function",
        "props": Object {
          "children": "Tab3",
          "isActive": false,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Tab3",
        "type": [Function],
      },
    ],
    "type": "ul",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <TabHandle
            isActive={false}
            onClick={[Function]}
          >
            Tab1
          </TabHandle>,
          <TabHandle
            isActive={true}
            onClick={[Function]}
          >
            Tab2
          </TabHandle>,
          <TabHandle
            isActive={false}
            onClick={[Function]}
          >
            Tab3
          </TabHandle>,
        ],
        "className": "list_2yirk3",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "tab-0",
          "nodeType": "function",
          "props": Object {
            "children": "Tab1",
            "isActive": false,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Tab1",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "tab-1",
          "nodeType": "function",
          "props": Object {
            "children": "Tab2",
            "isActive": true,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Tab2",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "tab-2",
          "nodeType": "function",
          "props": Object {
            "children": "Tab3",
            "isActive": false,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Tab3",
          "type": [Function],
        },
      ],
      "type": "ul",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
