{"version":3,"sources":["components/shared/Tabs/TabHandle.js","components/shared/Tabs/TabList.js","components/shared/Tabs/index.js","components/demo/NewToBBanking.js","components/demo/LookingToSwitch.js","components/demo/index.js","actions/userActions.js","actions/layoutActions.js","actions/constants.js","api/githubService.js","api/addressService.js","components/shared/Loading.js","components/index.js","reducers/userReducer.js","reducers/layoutReducer.js","store.js","index.js"],"names":["TabHandle","_ref","_ref$isActive","isActive","onClick","children","className","css","styles","handle","handleActive","react_default","a","createElement","StyleSheet","create","flex","fontSize","display","justifyContent","alignItems","textAlign","fontWeight","cursor","color","borderLeft","concat",":first-of-type","@media screen and (max-width: 640px)","@media screen and (max-width: 500px)","backgroundColor","TabList","tabs","_ref$selectedTabIndex","selectedTabIndex","handleTabChange","handles","map","tab","index","Tabs_TabHandle","key","list","listStyle","paddingLeft","minHeight","border","borderRadius","tabHeight","overflow","Tabs","state","_this","setState","_this$props","this","props","content","Tabs_TabList","Component","padding","NewToBBanking","getAddressInfo","code","address","city","region","country","LookingToSwitch","getGithubInfo","user","githubData","name","href","url","Demo","wrapper","Tabs_Tabs","NewToBBanking_NewToBBanking","LookingToSwitch_LookingToSwitch","connect","id","dispatch","type","fetch","then","res","json","fetchGithubUserInfo","response","payload","company","avatar_url","html_url","extractGithubInfo","catch","error","console","fetchAddressByPostCode","result","admin_district","extractAddressInfo","marginLeft","marginRight","Loading","_ref$message","message","position","paddingTop","opacity","top","bottom","left","right","App","isSpinnerShowing","shared_Loading","demo","layout","margin","fontFamily","-webkit-font-smoothing","-moz-osx-font-smoothing","initState","reducer","combineReducers","arguments","length","undefined","action","Object","objectSpread","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","store","components","document","getElementById"],"mappings":"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","file":"static/js/main.18dce197.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyleSheet, css } from 'aphrodite';\n\nconst TabHandle = ({isActive = false, onClick, children}) => {\n    const className = isActive ? css(styles.handle, styles.handleActive) : css(styles.handle);\n    return <li onClick={onClick} className={className}>{children}</li>;\n}\n\nTabHandle.propTypes = {\n    isActive: PropTypes.bool,\n    onClick: PropTypes.func.isRequired,\n    children: PropTypes.any.isRequired\n}\n\nexport default TabHandle;\n\nconst baseColor = '#054f9b';\nconst accentColor = '#fff';\n\nconst styles = StyleSheet.create({\n    handle: {\n        flex: 1,\n        fontSize: '15px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        textAlign: 'center',\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        color: baseColor,\n        borderLeft: `2px solid ${baseColor}`,\n        ':first-of-type': {\n            borderLeft: 0\n        },\n        '@media screen and (max-width: 640px)': {\n            fontSize: '12px'\n        },\n        '@media screen and (max-width: 500px)': {\n            fontSize: '10px'\n        }\n    },\n    handleActive: {\n        backgroundColor: baseColor,\n        color: accentColor\n    }\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, css } from 'aphrodite';\n\nimport TabHandle from './TabHandle';\n\nconst TabList = ({tabs, selectedTabIndex = 0, handleTabChange}) => {\n    const handles = tabs.map((tab, index) => {\n        \n        return (\n            <TabHandle \n                key={`tab-${index}`} \n                onClick={() => handleTabChange(index)} \n                isActive={index === selectedTabIndex}\n            >\n                {tab}\n            </TabHandle>\n        );\n    })\n\n    return (\n        <ul className={css(styles.list)}>\n            {handles}\n        </ul>\n    );\n};\n\nTabList.propTypes = {\n    tabs: PropTypes.arrayOf(PropTypes.string).isRequired,\n    selectedTabIndex: PropTypes.number,\n    handleTabChange: PropTypes.func.isRequired\n}\n\nexport default TabList;\n\nconst baseColor = '#054f9b';\nconst tabHeight = 70;\n\nconst styles = StyleSheet.create({\n    list: {\n        listStyle: 'none',\n        paddingLeft: 0,\n        display: 'flex',\n        minHeight: `${tabHeight}px`,\n        border: `2px solid ${baseColor}`,\n        borderRadius: `${tabHeight/2}px`,\n        overflow: 'hidden'\n    }\n});","import React, { Component } from 'react';\nimport { StyleSheet, css } from 'aphrodite';\nimport PropTypes from 'prop-types';\n\nimport TabList from './TabList';\n\nexport default class Tabs extends Component { \n\n    static propTypes = {\n        tabs: PropTypes.arrayOf(PropTypes.string).isRequired,\n        children: PropTypes.any.isRequired\n    };\n\n    state = {\n        selectedTabIndex: 0\n    };\n\n    handleTabChange = index => {\n        this.setState({\n            selectedTabIndex: index\n        });\n    }\n\n    render() {\n        const { tabs, children } = this.props;\n        const { selectedTabIndex } = this.state;\n\n        // in case not enough children are passed\n        const content = children[selectedTabIndex] || <div>No content available</div>; \n\n        return (\n            <div>\n                <nav>\n                    <TabList \n                        tabs={tabs} \n                        selectedTabIndex={selectedTabIndex}\n                        handleTabChange={this.handleTabChange}\n                    />\n                </nav>\n                <div className={css(styles.content)}>\n                    {content}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    content: {\n        padding: '20px'\n    }\n});","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class NewToBBanking extends Component {\n\n    static propTypes = {\n        code: PropTypes.string.isRequired,\n        address: PropTypes.object.isRequired,\n        getAddressInfo: PropTypes.func.isRequired\n    }\n\n    componentDidMount() {\n        this.props.getAddressInfo(this.props.code)\n    }\n\n    render() {\n        const { address } = this.props;\n        return (\n            <div>\n                {address && address.city ?\n                    <p>You live in the city of {address.city} in the {address.region} part of {address.country}</p>\n                    : 'No address info'}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class LookingToSwitch extends Component {\n\n    static propTypes = {\n        user: PropTypes.string.isRequired,\n        githubData: PropTypes.object.isRequired,\n        getGithubInfo: PropTypes.func\n    }\n\n    componentDidMount() {\n        this.props.getGithubInfo(this.props.user)\n    }\n\n    render() {\n        const { githubData } = this.props;\n        return (\n            <div>\n                {githubData && githubData.name ?\n                    <p>Your name is {githubData.name} and your github profie can be found <a href={githubData.url}>here</a></p>\n                    : 'No github info'}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, css } from 'aphrodite';\n\nimport { getGithubInfo, getAddressInfo } from '../../actions/userActions';\n\nimport Tabs from '../shared/Tabs';\nimport NewToBBanking from './NewToBBanking';\nimport LookingToSwitch from './LookingToSwitch';\n\nclass Demo extends Component {\n\n    static propTypes = {\n        address: PropTypes.object.isRequired,\n        githubData: PropTypes.object.isRequired,\n        getAddressInfo: PropTypes.func.isRequired,\n        getGithubInfo: PropTypes.func.isRequired\n    }\n\n    render() {\n        const { address, githubData } = this.props;\n\n        const tabs = [`I'm new to business banking`, `I'm looking to switch`, `I run a charity or social enterprise`, `I'm an existing customer`];\n\n        return (\n            <div className={css(styles.wrapper)}>\n                <Tabs tabs={tabs}>\n                    <NewToBBanking code='M4 3TR' address={address} getAddressInfo={this.props.getAddressInfo} />\n                    <LookingToSwitch user='cristigalea' githubData={githubData} getGithubInfo={this.props.getGithubInfo} />\n                    <div>Info about the charity</div>\n                    <div>Info about the existing customer</div>\n                </Tabs>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({\n        address: state.user.address,\n        githubData: state.user.githubData\n    }), {\n        getGithubInfo,\n        getAddressInfo\n    })(Demo);\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        marginLeft: '50px',\n        marginRight: '50px',\n        '@media screen and (max-width: 640px)': {\n            marginLeft: '20px',\n            marginRight: '20px'\n        },\n        '@media screen and (max-width: 500px)': {\n            marginLeft: 0,\n            marginRight: 0\n        }\n    }\n});","import { showSpinner, hideSpinner } from './layoutActions';\nimport { fetchAddressByPostCode } from '../api/addressService';\nimport { fetchGithubUserInfo } from '../api/githubService';\n\nimport {\n    GET_ADDRESS_INFO,\n    GET_GITHUB_INFO\n} from './constants';\n\nconst extractAddressInfo = response => ({\n    region: response.result && response.result.region,\n    country: response.result && response.result.country,\n    city: response.result && response.result.admin_district\n});\n\nexport const getAddressInfo = code => {\n    return dispatch => {\n        dispatch(showSpinner());\n        fetchAddressByPostCode(code).then(response => {\n            dispatch({\n                type: GET_ADDRESS_INFO,\n                payload: extractAddressInfo(response)\n            });\n            dispatch(hideSpinner());\n        }).catch(error => {\n            dispatch(hideSpinner());\n            console.error(error);\n        })\n    }\n};\n\nconst extractGithubInfo = response => ({\n    name: response.name,\n    company: response.company || 'N/A',\n    avatar_url: response.avatar_url,\n    url: response.html_url\n});\n\nexport const getGithubInfo = id => {\n    return dispatch => {\n        dispatch(showSpinner());\n        fetchGithubUserInfo(id).then(response => {\n            dispatch({\n                type: GET_GITHUB_INFO,\n                payload: extractGithubInfo(response)\n            });\n            dispatch(hideSpinner());\n        }).catch(error => {\n            dispatch(hideSpinner());\n            console.error(error);\n        })\n    }\n};","import {\n    SHOW_SPINNER,\n    HIDE_SPINNER\n} from './constants';\n\nexport const showSpinner = () => ({type: SHOW_SPINNER});\nexport const hideSpinner = () => ({type: HIDE_SPINNER});","export const SHOW_SPINNER = 'SHOW_SPINNER';\nexport const HIDE_SPINNER = 'HIDE_SPINNER';\n\nexport const GET_ADDRESS_INFO = 'GET_ADDRESS_INFO';\nexport const GET_GITHUB_INFO = 'GET_GITHUB_INFO';","const apiUrl = 'https://api.github.com';\n\nexport const fetchGithubUserInfo = id => fetch(`${apiUrl}/users/${id}`).then(res => res.json());\n","const apiUrl = 'http://api.postcodes.io';\n\nexport const fetchAddressByPostCode = code => fetch(`${apiUrl}/postcodes/${code}`).then(res => res.json());\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, css } from 'aphrodite';\n\nconst Loading = ({message = 'Loading...'}) => (\n    <div className={css(styles.wrapper)}>{message}</div>\n);\n\nLoading.propTypes = {\n    message: PropTypes.string.isRequired\n};\n\nexport default Loading;\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        fontSize: '20px',\n        position: 'absolute',\n        backgroundColor: '#fff',\n        paddingTop: '100px',\n        textAlign: 'center',\n        opacity: 0.7,\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0\n    }\n});","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, css } from 'aphrodite';\n\nimport Demo from './demo'\nimport Loading from './shared/Loading';\n\nclass App extends Component {\n\n    static propTypes = {\n        isSpinnerShowing: PropTypes.string\n    }\n\n    render() {\n        const { isSpinnerShowing } = this.props;\n\n        return (\n            <div className={css(styles.wrapper)}>\n                {isSpinnerShowing && <Loading />}\n                <Demo />\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        isSpinnerShowing: state.layout.isSpinnerShowing\n    })\n)(App);\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        margin: 0,\n        padding: 0,\n        fontFamily: `-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\"Ubuntu\", \n        \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",sans-serif`,\n        '-webkit-font-smoothing': 'antialiased',\n        '-moz-osx-font-smoothing': 'grayscale'\n    }\n});","import {\n    GET_ADDRESS_INFO,\n    GET_GITHUB_INFO\n} from '../actions/constants';\n\n\nconst initState = {\n    address: {},\n    githubData: {}\n};\n\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case GET_GITHUB_INFO:\n            return { ...state, githubData: action.payload };\n        case GET_ADDRESS_INFO:\n            return { ...state, address: action.payload };\n        default:\n            return state;\n    }\n};","import { SHOW_SPINNER, HIDE_SPINNER } from '../actions/constants';\n\nconst initState = {\n    isSpinnerShowing: false\n};\n\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case SHOW_SPINNER:\n            return { ...state, isSpinnerShowing: true };\n        case HIDE_SPINNER:\n            return { ...state, isSpinnerShowing: false };\n        default:\n            return state;\n    }\n};","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport userReducer from './reducers/userReducer';\nimport layoutReducer from './reducers/layoutReducer';\n\nconst reducer = combineReducers({\n    user: userReducer,\n    layout: layoutReducer\n});\n\nexport default createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components';\nimport store from './store';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}